@model IEnumerable<BookStore.Domain.Entities.Purchase>
@using BookStore.Domain.Concrete;
@{
    var db = new EFDbContext();
}
@if (Model.Any())
{
    <div class="panel panel-default">
        <div class="panel-heading">
            <h3>Список заказов</h3>
        </div>
        <div class="panel-body">
            <table class="table table-striped table-condensed table-bordered">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.OrderId)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.UserId)
                    </th>
                    <th>
                        Логин
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.DeliveryInfoId)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.DeliveryStatus)
                    </th>
                    <th>Действия</th>
                </tr>
                @foreach (var item in Model.GroupBy(p => p.DeliveryInfoId).Select(g => g.First()).ToList())
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.OrderId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.UserId)
                        </td>
                        <td>
                            @db.Users.Find(item.UserId).Email
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DeliveryInfoId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DeliveryStatus)
                        </td>
                        <td>
                            @Ajax.ActionLink("Показать детали", "PurchaseDetails", new { item.DeliveryInfoId },
                                                         new AjaxOptions { UpdateTargetId = "showDetailsAdmin" })
                            @using (Html.BeginForm("DeletePurchase", "Admin"))
                            {
                                @Html.Hidden("DeliveryInfoId", item.DeliveryInfoId)
                                <input type="submit"
                                       class="btn btn-warning btn-xs"
                                       value="Удалить"
                                       style="margin-top:10px;" />
                            }
                            @if (item.DeliveryStatus != "Получен")
                            {
                                if (item.DeliveryStatus == "Отправлен")
                                {
                                    using (Html.BeginForm("DeferPurchase", "Admin"))
                                    {
                                        @Html.Hidden("deliveryInfoId", item.DeliveryInfoId)
                                        <input type="submit" class="btn btn-warning btn-xs" style="margin-top:10px" value="Отложить" />
                                    }
                                }
                                else
                                {
                                    using (Html.BeginForm("SendPurchase", "Admin"))
                                    {
                                        @Html.Hidden("deliveryInfoId", item.DeliveryInfoId)
                                        <input type="submit" class="btn btn-success btn-xs" style="margin-top:10px" value="Отправить" />
                                    }
                                }
                            }
                        </td>
                    </tr>
                }
            </table>
        </div>
    </div>
    <div id="showDetailsAdmin"></div>
}
else
{
    <h1 class="text-center">К сожалению, вы ничего не заказали.</h1>
    <br />
}